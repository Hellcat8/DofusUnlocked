// <auto-generated />
using DofusUnlocked.API.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DofusUnlocked.API.Migrations
{
    [DbContext(typeof(DofusContext))]
    partial class DofusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.CharacterClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("CharacterClasses");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ConditionValue")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.DamageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("DamageTypes");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.EffectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EffectTypes");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterClassId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("VariantSpellId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterClassId");

                    b.HasIndex("VariantSpellId")
                        .IsUnique();

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.SpellEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DamageTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EffectOrder")
                        .HasColumnType("int");

                    b.Property<int>("EffectTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxValue")
                        .HasColumnType("int");

                    b.Property<int?>("MinValue")
                        .HasColumnType("int");

                    b.Property<int>("SpellRankId")
                        .HasColumnType("int");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DamageTypeId");

                    b.HasIndex("EffectTypeId");

                    b.HasIndex("SpellRankId");

                    b.HasIndex("StateId");

                    b.ToTable("SpellEffects");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.SpellRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("APCost")
                        .HasColumnType("int");

                    b.Property<bool>("CanCastOnEmptyCell")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CastInDiagonal")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CastInLine")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Cooldown")
                        .HasColumnType("int");

                    b.Property<int>("GlobalCooldown")
                        .HasColumnType("int");

                    b.Property<bool>("IsLineOfSightRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRangeModifiable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxRange")
                        .HasColumnType("int");

                    b.Property<int?>("MaxStack")
                        .HasColumnType("int");

                    b.Property<int>("MinRange")
                        .HasColumnType("int");

                    b.Property<int>("RequiredLevel")
                        .HasColumnType("int");

                    b.Property<int>("SpellId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellRanks");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.Condition", b =>
                {
                    b.HasOne("DofusUnlocked.API.Models.Spells.State", "State")
                        .WithMany("Conditions")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.Spell", b =>
                {
                    b.HasOne("DofusUnlocked.API.Models.Spells.CharacterClass", "CharacterClass")
                        .WithMany("Spells")
                        .HasForeignKey("CharacterClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DofusUnlocked.API.Models.Spells.Spell", "VariantSpell")
                        .WithOne("OriginalSpell")
                        .HasForeignKey("DofusUnlocked.API.Models.Spells.Spell", "VariantSpellId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CharacterClass");

                    b.Navigation("VariantSpell");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.SpellEffect", b =>
                {
                    b.HasOne("DofusUnlocked.API.Models.Spells.DamageType", "DamageType")
                        .WithMany()
                        .HasForeignKey("DamageTypeId");

                    b.HasOne("DofusUnlocked.API.Models.Spells.EffectType", "EffectType")
                        .WithMany()
                        .HasForeignKey("EffectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DofusUnlocked.API.Models.Spells.SpellRank", "SpellRank")
                        .WithMany()
                        .HasForeignKey("SpellRankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DofusUnlocked.API.Models.Spells.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("DamageType");

                    b.Navigation("EffectType");

                    b.Navigation("SpellRank");

                    b.Navigation("State");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.SpellRank", b =>
                {
                    b.HasOne("DofusUnlocked.API.Models.Spells.Spell", "Spell")
                        .WithMany("SpellRanks")
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.CharacterClass", b =>
                {
                    b.Navigation("Spells");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.Spell", b =>
                {
                    b.Navigation("OriginalSpell");

                    b.Navigation("SpellRanks");
                });

            modelBuilder.Entity("DofusUnlocked.API.Models.Spells.State", b =>
                {
                    b.Navigation("Conditions");
                });
#pragma warning restore 612, 618
        }
    }
}
